Q - Check if subtree

class Solution
{
  public:
    //Function to check if S is a subtree of tree T.
    bool check(Node* root1,Node* root2){
        if(!root1 && !root2) return true;
        if(!root1 || !root2) return false;
        if(root1->data!=root2->data){
            return false;
        }
        return check(root1->left,root2->left) && check(root1->right,root2->right);
    }
    bool ans=false;
    void helper(Node *root1,Node *root2){
        if(!root1) return;
        if(root1->data==root2->data){
            //bool ok=true;
            if(check(root1,root2)) ans=true;
        }
        isSubTree(root1->left,root2);
        isSubTree(root1->right,root2);
    }
    
    bool isSubTree(Node* T, Node* S) 
    {
        // Your code here
        helper(T,S);
        return ans;
    }
};
